<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../ViewSpringConfig.xslt"?>
<!-- 
  Configuration for the Spring dependency injection framework. 
  Standard components that are part of the core product are configured in this file.
-->
<objects xmlns="http://www.springframework.net"
         xmlns:aop="http://www.springframework.net/aop"
         default-dependency-check="objects"
         default-autowire="byName">

  <!--Database connectivity-->
  <object name="SessionManager"
          type="Mobile.Repository.TransactionalContextSessionManager, Mobile.Repository"
          dependency-check="none"></object>

  <object name="SessionFactory"
          type="Spring.Data.NHibernate.LocalSessionFactoryObject, Spring.Data.NHibernate21"
          dependency-check="none">
    <property name="MappingAssemblies">
      <list>
        <value>Mobile.DomainObjects</value>
      </list>
    </property>
    <property name="HibernateProperties">
      <description>
        Dictionary of settings for NHibernate.The placeholders in the connectionstring
        are replaced with values from Deloyment.config.
      </description>
      <dictionary>
        <entry key="generate_statistics" value="true"/>
        <!-- Provider, driver, dialect: use the System.Data.SqlClient data access library.
           Use SQL 2005 specific SQL.-->
        <entry key="connection.provider" value="NHibernate.Connection.DriverConnectionProvider"/>
        <entry key="connection.driver_class" value="NHibernate.Driver.SqlClientDriver"/>
        <entry key="dialect" value="NHibernate.Dialect.MsSql2005Dialect"/>
        <!--Nesting level for OUTER JOINS when loading a query object graph: 7 levels down.
        This is like Slot->Position->PositionText   -->
        <entry key="hibernate.max_fetch_depth" value="7"/>
        <!-- Use Castle.DynamicProxy2 for lazy loading -->
        <entry key="proxyfactory.factory_class"
                value="NHibernate.ByteCode.Castle.ProxyFactoryFactory, NHibernate.ByteCode.Castle"/>
        <!-- ConnectionString. The placeholders are replaced with settings in the Deployment.config
            file, so there should be no need to ever change this. -->
        <entry key="connection.connection_string"
               value="Server=${Database.Server};initial catalog=${Database.DBName};Integrated Security=No;uid=${Database.User};pwd=${Database.Passwords}"/>
      </dictionary>
    </property>
  </object>

  <!--Repository-->
  <object name="RepositoryBase" abstract="true">
    <description>Base configuration for repositories</description>
    <property name="SessionManager" ref="SessionManager"/>
  </object>

  <object name="CompanyRepository"
       type="Mobile.Repository.CompanyRepository, Mobile.Repository">
  </object>
  <object name="CategoryAccRepository"
       type="Mobile.Repository.CategoryAccRepository, Mobile.Repository">
  </object>
  <object name="ProductRepository"
       type="Mobile.Repository.ProductRepository, Mobile.Repository">
  </object>

  <object name="ContactRepository"
       type="Mobile.Repository.ContactRepository, Mobile.Repository">
  </object>
  <object name="ServiceRepository"
       type="Mobile.Repository.ServiceRepository, Mobile.Repository">
  </object>
  <object name="AccessoriesRepository"
       type="Mobile.Repository.AccessoriesRepository, Mobile.Repository">
  </object>
  <object name="SystemConfigurationRepository"
       type="Mobile.Repository.SystemConfigurationRepository, Mobile.Repository">
  </object>
  <object name="ProductStatusRepository"
       type="Mobile.Repository.ProductStatusRepository, Mobile.Repository">
  </object>
  <object name="FeatureTypeRepository"
       type="Mobile.Repository.FeatureTypeRepository, Mobile.Repository">
  </object>
  <object name="ProductSpecificationRepository"
       type="Mobile.Repository.ProductSpecificationRepository, Mobile.Repository">
  </object>
  <object name="ProductColorRepository"
       type="Mobile.Repository.ProductColorRepository, Mobile.Repository">
  </object>

  <object name="ProductRepairRepository"
       type="Mobile.Repository.ProductRepairRepository, Mobile.Repository">
  </object>

  <!--Service -->
  <object name="ProductService"
          type="MobileTech.ProductService, MobileTech" singleton="false">
  </object>
  <object name="AdministrationService"
          type="MobileTech.AdministrationService, MobileTech" singleton="false">
  </object>
  <!--Logger -->
  
</objects>